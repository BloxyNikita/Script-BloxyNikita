-- LocalScript в StarterPlayerScripts

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Создаем ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "TeleportGui"
screenGui.Parent = playerGui

-- Функция для поиска игрока по приоритету
local function findTargetPlayer(primaryName, secondaryName)
    local primaryPlayer = Players:FindFirstChild(primaryName)
    if primaryPlayer and primaryPlayer.Character then
        return primaryPlayer
    end
    
    local secondaryPlayer = Players:FindFirstChild(secondaryName)
    if secondaryPlayer and secondaryPlayer.Character then
        return secondaryPlayer
    end
    
    return nil
end

-- Функция для создания кнопки
local function createButton(buttonName, buttonText, targetConfig, position)
    local teleportButton = Instance.new("TextButton")
    teleportButton.Name = buttonName
    teleportButton.Size = UDim2.new(0, 120, 0, 50)
    teleportButton.Position = position
    teleportButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    teleportButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    teleportButton.Text = buttonText
    teleportButton.TextScaled = true
    teleportButton.Font = Enum.Font.GothamBold
    teleportButton.BorderSizePixel = 2
    teleportButton.BorderColor3 = Color3.fromRGB(100, 100, 100)
    teleportButton.Parent = screenGui

    -- Добавляем скругление углов
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = teleportButton

    -- Добавляем тень/эффект глубины
    local shadow = Instance.new("UIStroke")
    shadow.Color = Color3.fromRGB(0, 0, 0)
    shadow.Thickness = 2
    shadow.Parent = teleportButton

    -- Переменные для перемещения кнопки
    local isDragging = false
    local dragStart
    local buttonStartPosition

    -- Функция для перемещения кнопки
    local function startDrag(input)
        isDragging = true
        dragStart = input.Position
        buttonStartPosition = teleportButton.Position
        
        -- Эффект при захвате
        teleportButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    end

    local function endDrag(input)
        isDragging = false
        
        -- Возвращаем нормальный цвет
        teleportButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    end

    local function updateDrag(input)
        if isDragging then
            local delta = input.Position - dragStart
            local newPosition = UDim2.new(
                buttonStartPosition.X.Scale,
                buttonStartPosition.X.Offset + delta.X,
                buttonStartPosition.Y.Scale,
                buttonStartPosition.Y.Offset + delta.Y
            )
            teleportButton.Position = newPosition
        end
    end

    -- Подключаем обработчики для перемещения
    teleportButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            startDrag(input)
        end
    end)

    teleportButton.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            endDrag(input)
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            updateDrag(input)
        end
    end)

    -- Функция для телепортации к игроку
    local function teleportToTarget()
        local targetPlayer
        
        if buttonName == "BloxiButton" then
            -- Для кнопки "блокси" ищем по приоритету
            targetPlayer = findTargetPlayer(targetConfig.primary, targetConfig.secondary)
        else
            -- Для кнопки "сизян" ищем только одного игрока
            targetPlayer = Players:FindFirstChild(targetConfig)
        end
        
        if targetPlayer and targetPlayer.Character then
            local humanoidRootPart = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
            local targetCharacter = player.Character
            
            if humanoidRootPart and targetCharacter then
                local targetHRP = targetCharacter:FindFirstChild("HumanoidRootPart")
                
                if targetHRP then
                    -- Телепортируем персонажа
                    targetHRP.CFrame = humanoidRootPart.CFrame + Vector3.new(0, 3, 0)
                    
                    -- Визуальная обратная связь
                    teleportButton.Text = "Телепортация!"
                    teleportButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
                    
                    -- Анимация кнопки
                    local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
                    local tween = TweenService:Create(teleportButton, tweenInfo, {Size = UDim2.new(0, 130, 0, 55)})
                    tween:Play()
                    
                    wait(0.5)
                    
                    -- Возвращаем кнопку в исходное состояние
                    teleportButton.Text = buttonText
                    teleportButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                    local tweenBack = TweenService:Create(teleportButton, tweenInfo, {Size = UDim2.new(0, 120, 0, 50)})
                    tweenBack:Play()
                else
                    warn("У вашего персонажа нет HumanoidRootPart")
                end
            else
                teleportButton.Text = "Игрок не найден"
                wait(1)
                teleportButton.Text = buttonText
            end
        else
            teleportButton.Text = "Игрок не найден"
            wait(1)
            teleportButton.Text = buttonText
        end
    end

    -- Обработчик нажатия на кнопку
    teleportButton.MouseButton1Click:Connect(function()
        teleportToTarget()
    end)

    -- Также обрабатываем Touch события для мобильных устройств
    teleportButton.TouchTap:Connect(function()
        teleportToTarget()
    end)

    return teleportButton
end

-- Проверяем ник игрока и создаем соответствующие кнопки
local playerName = player.Name

if playerName == "chat_000999" or playerName == "lkaioa321421421" then
    -- Создаем кнопку "сизян" для телепортации к evreiiii2
    createButton("SizyanButton", "сизян", "evreiiii2", UDim2.new(0, 50, 0, 50))
    print("Кнопка 'сизян' создана для игрока: " .. playerName)
    
elseif playerName == "evreiiii2" then
    -- Создаем кнопку "блокси" для телепортации к lkaioa321421421 (или chat_000999)
    createButton("BloxiButton", "блокси", {primary = "lkaioa321421421", secondary = "chat_000999"}, UDim2.new(0, 50, 0, 50))
    print("Кнопка 'блокси' создана для игрока: " .. playerName)
    
else
    -- Создаем обе кнопки для других игроков
    createButton("SizyanButton", "сизян", "evreiiii2", UDim2.new(0, 50, 0, 50))
    createButton("BloxiButton", "блокси", {primary = "lkaioa321421421", secondary = "chat_000999"}, UDim2.new(0, 180, 0, 50))
    print("Обе кнопки созданы для игрока: " .. playerName)
end

print("Система телепортаций загружена!")
